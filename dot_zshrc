# Base16 Shell
# BASE16_SHELL="$HOME/.base16-manager/chriskempson/base16-shell/"
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
    eval "$("$BASE16_SHELL/profile_helper.sh")"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

## Profiling
#zmodload zsh/zprof
# TODO Entirety of my startup file... Still needed?
source $HOME/.zsh/config.zsh

# lazy load any custom functions
lazyload_fpath=$HOME/.zsh/autoload
fpath=($lazyload_fpath $fpath)
if [[ -d "$lazyload_fpath" ]]; then
    for func in $lazyload_fpath/*; do
        autoload -Uz ${func:t}
    done
fi
unset lazyload_fpath

# # completion https://github.com/getantibody/antibody/issues/242#issuecomment-404588896
autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
#if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

# menu select
unsetopt menu_complete

# completion performance improvements
# Force prefix matching, avoid partial globbing on path
zstyle ':completion:*' accept-exact '*(N)'
# enable completion cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.local/share/zsh/cache

# Ignore completion for non-existent commands
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'
#zstyle ':completion:*:functions' ignored-patterns '_*'


# completion behavior adjustments
# Case insensitive, partial-word and substring competion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
# zstyle ':completion:*:*:*:*:*' menu select
# zstyle ':completion:*' special-dirs true
#
# # Colors in the completion list
# zstyle ':completion:*' list-colors ''
# zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

zstyle :omz:plugins:ssh-agent identities id_rsa id_ed25519_appsgit id_ed25519_github

# from: vault -autocomplete-install
# autoload -U +X bashcompinit && bashcompinit
# complete -o nospace -C /usr/local/bin/vault vault

# Aliases
alias reload!='exec "$SHELL" -l'
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion
(( $+commands[exa] )) && {
    alias l='exa'
    alias la='exa -la'
    alias ll='exa -lag'
    alias lg='exa -bghHliS --git'
}
alias alacritty='/Applications/Alacritty.app/Contents/MacOS/alacritty'

# Git
alias gpu='git pull --prune --tags --all'
alias gco='git checkout'
alias gpo='git push origin HEAD'
alias gpa='git push origin --all'
alias gst='git status'
alias gcmh='git commit --amend -C HEAD'

# Docker
alias dockerhostshell='docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh'

# Emacs
alias doom='~/.emacs.d/bin/doom'
alias oc='~/.emacs.d/bin/org-capture'
if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
fi

# Kubernetes
(( $+commands[kubectl] )) && {
    alias k='nocorrect kubectl'
    alias kshell='k run alpine-tmp-shell --rm -i --tty --image alpine:latest -- /bin/sh'
    compdef k=kubectl
    # kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1
}

(( $+commands[kubectx] )) && {
    alias kx='kubectx'
    compdef kx=kubectx
}

(( $+commands[kubens] )) && {
    alias kn='kubens'
    compdef kn=kubens
}

# TODO members, groups, vault, Golang, Rust
alias cat='bat --plain'

alias c=chezmoi

# Homebrew
alias brews='brew list -1'
alias yay='brew outdated && brew upgrade && brew cleanup'

# Ruby
alias be='bundle exec'

# Pass
alias p=''
alias potp=''

# NPM
(( $+commands[npm] )) && {
   alias ng="npm list -g --depth=0 2>/dev/null"
   alias nl="npm list --depth=0 2>/dev/null"
}

(( $+commands[direnv] )) && {
    _direnv_hook() {
        eval "$("/usr/local/bin/direnv" export zsh)";
    }
    typeset -ag precmd_functions;
    if [[ -z ${precmd_functions[(r)_direnv_hook]} ]]; then
        precmd_functions+=_direnv_hook;
    fi
}

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/vault vault
complete -C /usr/local/bin/terraform terraform

if test -d ~/.bash-my-aws; then
    source ~/.bash-my-aws/aliases
    source ~/.bash-my-aws/bash_completion.sh
fi

source $HOME/.zsh/correction.zsh
source $HOME/.zsh/dots.zsh

if test -f "$HOME/.zsh/local.zsh"; then
    source $HOME/.zsh/local.zsh
fi

# Load colors from less, and others.
[[ -f ~/.LESS_TERMCAP ]] && . ~/.LESS_TERMCAP

unset updated_at

autoload -U select-word-style
select-word-style bash

## Source plugins last
# dynamic method
source <(antibody init)
antibody bundle <~/.zsh_plugins.txt

# static method, after updates run:
# antibody bundle <~/.zsh_plugins.txt > ~/.zsh_plugins.sh
#source ~/.zsh_plugins.sh

## ZAW settings
zstyle ':filter-select' case-insensitive yes
zstyle ':filter-select' hist-find-no-dups yes
bindkey '^Xr' zaw-history
bindkey '^ ' autosuggest-accept

# vterm setup
vterm_printf(){
    if [ -n "$TMUX" ]; then
        # Tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
fi

vterm_cmd() {
    local vterm_elisp
    vterm_elisp=""
    while [ $# -gt 0 ]; do
        vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
        shift
    done
    vterm_printf "51;E$vterm_elisp"
}

find_file() {
    vterm_cmd find-file "$(realpath "$@")"
}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
